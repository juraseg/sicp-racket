#lang racket
(define (same-parity? a b)
  (if (even? a)
      (even? b)
      (odd? b)))
(define (same-parity first . other)
  (define (iter first other)
    (if (null? (cdr other))
        (if (same-parity? first (car other))
            (cons (car other) null)
            null)
        (if (same-parity? first (car other))
            (cons (car other) (iter first (cdr other)))
            (iter first (cdr other)))))
  (cons first (iter first other)))